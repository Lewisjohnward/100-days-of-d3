{"version":3,"sources":["charts/chart1/styles.js","charts/chart1/Chart.js","charts/chart2/styles.js","charts/chart2/Chart.js","charts/chart2/useGetData.js","charts/chart3/styles.js","charts/chart3/Chart.js","charts/chart3/useGetData.js","charts/chart4/styles.js","charts/chart4/Chart.js","charts/chart4/useGetData.js","charts/chart5/styles.js","charts/chart5/Chart.js","charts/chart5/useGetData.js","components/HelloD3.js","components/Timer.js","components/Navbar.js","App.js","index.js"],"names":["Frame","styled","div","small","ChartContainer","Svg","svg","height","width","DescriptionContainer","Description","p","Signature","data","range","map","d","a","randomInt","b","margin","innerHeight","innerWidth","Chart1","xAxisScale","scaleLinear","domain","max","nice","yAxisScale","transform","ticks","tickValue","y2","stroke","y","style","textAnchor","x2","x","dy","r","Mark","useState","tooltipVisible","setToolTipVisible","cx","cy","fill","onMouseEnter","onMouseLeave","rx","Test","formatTime","timeFormat","Chart","setData","useEffect","csv","date","Date","teacherName","then","useGetData","xValue","xScale","scaleTime","extent","start","stop","binnedData","bin","value","thresholds","timeMonths","array","length","x0","x1","yScale","splitArray","split","year","month","basicexp","extraexp","totalexp","networth","nw","networth5","networth6","dx","fourPercentScale","fourPercentData","countData","json","Math","floor","sqrt","num","forEach","i","e","j","push","word","Object","getOwnPropertyNames","count","console","log","yValue","countValue","scaleBand","paddingInner","colorScale","wordValue","bandwidth","toolTipXLocation","setToolTipXLocation","toolTipYLocation","setToolTipYLocation","setWord","setCount","ToolTip","letterAnimation","keyframes","TextContainer","LetterContainer","bold","d3Array","wordArray","window","Hello","letter","Letter","visible","setVisible","className","prev","Icon","Container","Timer","TimerContainer","ButtonContainer","Start_StopContainer","ButtonDiv","DateContainer","TimerComponent","grid","seconds","setSeconds","active","setActive","parseInt","localStorage","getItem","setTimeout","setItem","toString","padStart","onClick","NavContainer","Title","IoMdHelp","CloseIcon","IoIosArrowBack","Navbar","BodyContainer","ChartGrid","View","IoIosArrowForward","SingleView","App","gridView","setGridView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aa41f991.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Frame = styled.div`\n  height: ${({ small }) => (small ? \"50px\" : \"350px\")};\n  width: ${({ small }) => (small ? \"250px\" : \"350px\")};\n  background-color: #ddc;\n  border: solid 1vmin #eee;\n  border-bottom-color: #fff;\n  border-left-color: #eee;\n  border-radius: 2px;\n  border-right-color: #eee;\n  border-top-color: #ddd;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.25) inset,\n    0 5px 10px 5px rgba(0, 0, 0, 0.25);\n\n  position: relative;\n  text-align: center;\n  &:before {\n    border-radius: 2px;\n    bottom: -0.4vmin;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.25) inset;\n    content: \"\";\n    left: -0.4vmin;\n    position: absolute;\n    right: -0.4vmin;\n    top: -0.4vmin;\n  }\n  &:after {\n    border-radius: 2px;\n    bottom: -0.5vmin;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.25);\n    content: \"\";\n    left: -0.5vmin;\n    position: absolute;\n    right: -0.5vmin;\n    top: -0.5vmin;\n  }\n`;\n\nexport const ChartContainer = styled.div`\nposition: relative;\nz-index: 999;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  padding: 5% 1%;\n  box-sizing: border-box;\n`;\n\nexport const Svg = styled.svg`\n  height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n  background: white;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\n  border: solid 2px;\n  border-bottom-color: #ffe;\n  border-left-color: #eed;\n  border-right-color: #eed;\n  border-top-color: #ccb;\n  \n\n  line {\n    stroke: gray;\n    opacity: 0.6;\n    shape-rendering: crispEdges;\n  }\n\n  circle {\n    fill: tomato;\n    \n  }\n\n  text {\n    font-style: italic;\n    fill: gray;\n    \n  }\n\n  rect {\n    stroke: tomato;\n    fill: white;\n  }\n`;\n\nexport const DescriptionContainer = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\n  background: white;\n`;\n\nexport const Description = styled.p`\n  text-align: left;\n  font-size: 0.7em;\n`;\n\nexport const Signature = styled.p`\n  text-align: left;\n  font-style: italic;\n  font-size: 0.6em;\n`;\n","import { useState } from \"react\";\nimport { randomInt, range, scaleLinear, max } from \"d3\";\nimport {\n  Frame,\n  Svg,\n  ChartContainer,\n  Description,\n  DescriptionContainer,\n  Signature,\n} from \"./styles\";\n\nconst data = range(10).map((d) => ({\n  a: randomInt(10)(),\n  b: d,\n}));\n\nconst margin = {\n  top: 30,\n  right: 30,\n  bottom: 30,\n  left: 30,\n};\n\nconst height = 200;\nconst width = 300;\n\nconst AxisTickOffset = 7;\n\nconst innerHeight = height - margin.top - margin.bottom;\nconst innerWidth = width - margin.left - margin.right;\n\nexport const Chart = () => {\n  const xValue = (d) => d.a;\n  const yValue = (d) => d.b;\n\n  const xAxisScale = scaleLinear()\n    .domain([0, max(data, xValue)])\n    .range([0, innerWidth])\n    .nice();\n\n  const yAxisScale = scaleLinear()\n    .domain([0, max(data, yValue)])\n    .range([innerHeight, 0])\n    .nice();\n\n  return (\n    <Frame>\n      <ChartContainer>\n        <Svg height={height} width={width}>\n          <g transform={`translate(${margin.left}, ${margin.top})`}>\n            {xAxisScale.ticks().map((tickValue) => (\n              <g transform={`translate(${xAxisScale(tickValue)}, 0)`}>\n                <line y2={innerHeight} stroke=\"black\" />\n                <text\n                  y={innerHeight + 3 * AxisTickOffset}\n                  style={{ textAnchor: \"middle\" }}\n                >\n                  {tickValue}\n                </text>\n              </g>\n            ))}\n\n            {yAxisScale.ticks().map((tickValue) => (\n              <g transform={`translate(0, ${yAxisScale(tickValue)})`}>\n                <line x2={innerWidth} stroke=\"black\" />\n                <text\n                  x={-AxisTickOffset}\n                  dy=\"0.32em\"\n                  style={{ textAnchor: \"end\" }}\n                >\n                  {tickValue}\n                </text>\n              </g>\n            ))}\n            {data.map(({ a, b }) => (\n              <Mark x={xAxisScale(a)} y={yAxisScale(b)} r={7} />\n            ))}\n          </g>\n        </Svg>\n\n        <Frame small={\"true\"}>\n          <DescriptionContainer>\n            <Description>Scatter graph on svg with D3</Description>\n            <Signature>09/10/21 - L Ward</Signature>\n          </DescriptionContainer>\n        </Frame>\n      </ChartContainer>\n    </Frame>\n  );\n};\n\nexport const Chart1= () => {\n  const xValue = (d) => d.a;\n  const yValue = (d) => d.b;\n\n  const xAxisScale = scaleLinear()\n    .domain([0, max(data, xValue)])\n    .range([0, innerWidth])\n    .nice();\n\n  const yAxisScale = scaleLinear()\n    .domain([0, max(data, yValue)])\n    .range([innerHeight, 0])\n    .nice();\n\n  return (\n        <Svg height={height} width={width}>\n          <g transform={`translate(${margin.left}, ${margin.top})`}>\n            {xAxisScale.ticks().map((tickValue) => (\n              <g transform={`translate(${xAxisScale(tickValue)}, 0)`}>\n                <line y2={innerHeight} stroke=\"black\" />\n                <text\n                  y={innerHeight + 3 * AxisTickOffset}\n                  style={{ textAnchor: \"middle\" }}\n                >\n                  {tickValue}\n                </text>\n              </g>\n            ))}\n\n            {yAxisScale.ticks().map((tickValue) => (\n              <g transform={`translate(0, ${yAxisScale(tickValue)})`}>\n                <line x2={innerWidth} stroke=\"black\" />\n                <text\n                  x={-AxisTickOffset}\n                  dy=\"0.32em\"\n                  style={{ textAnchor: \"end\" }}\n                >\n                  {tickValue}\n                </text>\n              </g>\n            ))}\n            {data.map(({ a, b }) => (\n              <Mark x={xAxisScale(a)} y={yAxisScale(b)} r={7} />\n            ))}\n          </g>\n        </Svg>\n  );\n};\n\nconst Mark = ({ x, y, r }) => {\n  const [tooltipVisible, setToolTipVisible] = useState(false);\n\n  return (\n    <>\n    <circle\n        cx={x}\n        cy={y}\n        r={r}\n        fill={\"black\"}\n        onMouseEnter={() => setToolTipVisible(!tooltipVisible)}\n        onMouseLeave={() => setToolTipVisible(!tooltipVisible)}\n      />\n      {tooltipVisible && <rect x={x + 10} y={y - 25} height={50} width={50} rx={5} />}\n      \n    </>\n  );\n};\n\nexport const Test = () => {\n  return (\n    <Frame>\n    <ChartContainer>\n      <Chart1 />\n    <Frame small={\"true\"}>\n          <DescriptionContainer>\n          <Description>Scatter graph on svg with D3</Description>\n            <Signature>09/10/21 - L Ward</Signature>\n          </DescriptionContainer>\n        </Frame>\n      </ChartContainer>\n    </Frame>\n  )\n\n\n}\n","import styled from \"styled-components\";\n\nexport const Frame = styled.div`\n  height: ${({ small }) => (small ? \"50px\" : \"350px\")};\n  width: ${({ small }) => (small ? \"250px\" : \"350px\")};\n  background-color: #ddc;\n  border: solid 1vmin #eee;\n  border-bottom-color: #fff;\n  border-left-color: #eee;\n  border-radius: 2px;\n  border-right-color: #eee;\n  border-top-color: #ddd;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.25) inset,\n    0 5px 10px 5px rgba(0, 0, 0, 0.25);\n\n  position: relative;\n  text-align: center;\n  &:before {\n    border-radius: 2px;\n    bottom: -0.4vmin;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.25) inset;\n    content: \"\";\n    left: -0.4vmin;\n    position: absolute;\n    right: -0.4vmin;\n    top: -0.4vmin;\n  }\n  &:after {\n    border-radius: 2px;\n    bottom: -0.5vmin;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.25);\n    content: \"\";\n    left: -0.5vmin;\n    position: absolute;\n    right: -0.5vmin;\n    top: -0.5vmin;\n  }\n`;\n\nexport const ChartContainer = styled.div`\nposition: relative;\nz-index: 999;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  padding: 5% 1%;\n  box-sizing: border-box;\n`;\n\nexport const Svg = styled.svg`\n  height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n  background: white;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\n  border: solid 2px;\n  border-bottom-color: #ffe;\n  border-left-color: #eed;\n  border-right-color: #eed;\n  border-top-color: #ccb;\n  font-size: 0.7em;\n\n  line {\n    stroke: gray;\n    opacity: 0.6;\n    shape-rendering: crispEdges;\n  }\n\n  text {\n    font-style: italic;\n    fill: gray;\n  }\n\n  rect {\n    fill: tomato;\n    \n  }\n`;\n\nexport const DescriptionContainer = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\n  background: white;\n`;\n\nexport const Description = styled.p`\n  text-align: left;\n  font-size: 0.7em;\n`;\n\nexport const Signature = styled.p`\n  text-align: left;\n  font-style: italic;\n  font-size: 0.6em;\n`;\n","import { useState } from \"react\";\nimport { useGetData } from \"./useGetData\";\nimport {\n  randomInt,\n  range,\n  scaleLinear,\n  scaleTime,\n  max,\n  bin,\n  extent,\n  timeMonths,\n  sum,\n  scaleBand,\n  timeFormat\n} from \"d3\";\nimport {\n  Frame,\n  Svg,\n  ChartContainer,\n  Description,\n  DescriptionContainer,\n  Signature,\n} from \"./styles\";\n\nconst margin = {\n  top: 30,\n  right: 30,\n  bottom: 30,\n  left: 40,\n};\n\nconst height = 200;\nconst width = 300;\n\nconst AxisTickOffset = 5;\nconst xAxisLabelOffset = 30\nconst yAxisLabelOffset = 25\n\nconst innerHeight = height - margin.top - margin.bottom;\nconst innerWidth = width - margin.left - margin.right;\n\nconst formatTime = timeFormat(\"%Y\")\n\nexport const Chart = () => {\n  const data = useGetData();\n\n  if (!data) {\n    return null;\n  }\n\n  const xValue = (d) => d.date;\n\n  const xScale = scaleTime()\n    .domain(extent(data, xValue))\n    .range([0, innerWidth])\n    .nice()\n\n  const [start, stop] = xScale.domain();\n\n  const binnedData = bin()\n    .value(xValue)\n    .domain(xScale.domain())\n    .thresholds(timeMonths(start, stop))(data)\n    .map((array) => {\n      return {\n        y: array.length,\n        x0: array.x0,\n        x1: array.x1,\n      };\n    });\n\n  const yScale = scaleLinear()\n    .domain([0, max(binnedData, (d) => d.y)])\n    .range([innerHeight, 0])\n    .nice();\n\n  return (\n    <Frame>\n      <ChartContainer>\n        <Svg height={height} width={width}>\n          <g transform={`translate(${margin.left}, ${margin.top})`}>\n          {xScale.ticks().map((tickValue) => (\n            <g transform={`translate(${xScale(tickValue)}, 0)`}>\n              <line y2={innerHeight} stroke=\"black\" />\n              <text\n                y={innerHeight + 3 * AxisTickOffset}\n                style={{ textAnchor: \"middle\" }}\n              >\n                {formatTime(tickValue)}\n              </text>\n            </g>\n          ))}\n\n          {yScale.ticks().map((tickValue) => (\n            <g transform={`translate(0, ${yScale(tickValue)})`}>\n              <line x2={innerWidth} stroke=\"black\" />\n              <text\n                x={-AxisTickOffset}\n                dy=\"0.32em\"\n                style={{ textAnchor: \"end\" }}\n              >\n                {tickValue}\n              </text>\n            </g>\n          ))}\n          <text\n            x={innerWidth / 2}\n            y={innerHeight + xAxisLabelOffset}\n            style={{textAnchor: \"middle\"}}\n          >Year</text>\n          <text\n            style={{textAnchor: \"middle\"}}\n            transform={`translate(${-yAxisLabelOffset}, ${\n              innerHeight / 2\n            }) rotate(-90)`}\n          >Number of lessons</text>\n            {binnedData.map(({ x0, x1, y }) => (\n              <Mark\n                x={xScale(x0)}\n                y={yScale(y)}\n                width={xScale(x1) - xScale(x0)}\n                height={innerHeight - yScale(y)}\n              />\n            ))}\n          </g>\n        </Svg>\n\n        <Frame small={\"true\"}>\n          <DescriptionContainer>\n          <Description>Number of lessons done per month on Italki</Description>\n            <Description>Cumulative Bar Chart on SVG With D3</Description>\n            <Signature>09/10/21 - L Ward</Signature>\n          </DescriptionContainer>\n        </Frame>\n      </ChartContainer>\n    </Frame>\n  );\n};\n\nconst Mark = ({ x, y, width, height }) => {\n  const [tooltipVisible, setToolTipVisible] = useState(false);\n\n  return (\n    <>\n      <rect\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        fill={\"black\"}\n        onMouseEnter={() => setToolTipVisible(!tooltipVisible)}\n        onMouseLeave={() => setToolTipVisible(!tooltipVisible)}\n      />\n      {tooltipVisible && (\n        <rect x={x + 10} y={y - 25} height={50} width={50} rx={5} />\n      )}\n    </>\n  );\n};\n","import {useState, useEffect} from \"react\"\nimport {csv} from \"d3\"\n\n\nconst url = \"https://gist.githubusercontent.com/Lewisjohnward/f0a82b4cab2cd299ea5d737f759db48f/raw/77d383d3ab9033b806660e98e0e7988eaca7c3b9/lessons.csv\"\n\nexport const useGetData = () => {\n    const [data, setData] = useState(null)\n\n    useEffect(() => {\n        const row = d => {\n            d.date = new Date(d.date)\n            d.teacherName = d.teacherName\n\n            return d\n        }\n        \n        csv(url, row).then(setData)\n    }, [])\n\n\n    return data\n}\n","import styled from \"styled-components\";\n\nexport const Frame = styled.div`\n  height: ${({ small }) => (small ? \"50px\" : \"350px\")};\n  width: ${({ small }) => (small ? \"250px\" : \"350px\")};\n  background-color: #ddc;\n  border: solid 1vmin #eee;\n  border-bottom-color: #fff;\n  border-left-color: #eee;\n  border-radius: 2px;\n  border-right-color: #eee;\n  border-top-color: #ddd;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.25) inset,\n    0 5px 10px 5px rgba(0, 0, 0, 0.25);\n\n  position: relative;\n  text-align: center;\n  &:before {\n    border-radius: 2px;\n    bottom: -0.4vmin;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.25) inset;\n    content: \"\";\n    left: -0.4vmin;\n    position: absolute;\n    right: -0.4vmin;\n    top: -0.4vmin;\n  }\n  &:after {\n    border-radius: 2px;\n    bottom: -0.5vmin;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.25);\n    content: \"\";\n    left: -0.5vmin;\n    position: absolute;\n    right: -0.5vmin;\n    top: -0.5vmin;\n  }\n`;\n\nexport const ChartContainer = styled.div`\nposition: relative;\nz-index: 999;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  padding: 5% 1%;\n  box-sizing: border-box;\n`;\n\nexport const Svg = styled.svg`\n  height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n  background: white;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\n  border: solid 2px;\n  border-bottom-color: #ffe;\n  border-left-color: #eed;\n  border-right-color: #eed;\n  border-top-color: #ccb;\n  font-size: 0.7em;\n\n  line {\n    stroke: gray;\n    opacity: 0.6;\n    shape-rendering: crispEdges;\n  }\n\n  text {\n    font-style: italic;\n    fill: gray;\n  }\n\n  .rect {\n    fill: seagreen;\n\n    .five{\n    fill : crimson;\n  }\n  }\n\n  \n`;\n\nexport const DescriptionContainer = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\n  background: white;\n`;\n\nexport const Description = styled.p`\n  text-align: left;\n  font-size: 0.7em;\n`;\n\nexport const Signature = styled.p`\n  text-align: left;\n  font-style: italic;\n  font-size: 0.6em;\n`;\n","import { useState } from \"react\";\nimport { useGetData } from \"./useGetData\";\nimport {\n  randomInt,\n  range,\n  scaleLinear,\n  scaleTime,\n  max,\n  bin,\n  extent,\n  timeMonths,\n  sum,\n  scaleBand,\n  timeFormat,\n  format\n} from \"d3\";\nimport {\n  Frame,\n  Svg,\n  ChartContainer,\n  Description,\n  DescriptionContainer,\n  Signature,\n} from \"./styles\";\n\nconst margin = {\n  top: 30,\n  right: 30,\n  bottom: 30,\n  left: 50,\n};\n\nconst height = 200;\nconst width = 300;\n\nconst AxisTickOffset = 5;\nconst xAxisLabelOffset = 25;\nconst yAxisLabelOffset = 35;\n\nconst innerHeight = height - margin.top - margin.bottom;\nconst innerWidth = width - margin.left - margin.right;\n\nconst formatTime = timeFormat(\"%Y\");\n\nexport const Chart = () => {\n  const data = useGetData();\n\n  if (!data) {\n    return null;\n  }\n\n  const xValue = (d) => d.date;\n  const yValue = (d) => d.networth;\n\n  const xScale = scaleTime()\n    .domain(extent(data, xValue))\n    .range([0, innerWidth])\n    .nice();\n\n  const yScale = scaleLinear()\n    .domain([0, max(data, yValue)])\n    .range([innerHeight, 0])\n    .nice();\n\n  const fourPercentScale = scaleLinear()\n  .domain([0, max(data, d => d.nw * 0.10)])\n  .range([innerHeight, 0])\n  .nice();\n\n  const fourPercentData = data.map(({date, networth, basicexp, totalexp}) => {\n    return ({\n      date, \n      networth: networth * 0.04,\n      networth5: networth * 0.05,\n      networth6: networth * 0.06,\n      basicexp: basicexp * 12,\n      totalexp: totalexp * 12\n    })\n  })\n\n  return (\n    <Frame>\n      <ChartContainer>\n        <Svg height={height} width={width}>\n          <g transform={`translate(${margin.left}, ${margin.top})`}>\n            {xScale.ticks(4).map((tickValue) => (\n              <g transform={`translate(${xScale(tickValue)}, 0)`}>\n                <text\n                  dx=\"0.32em\"\n                  y={innerHeight + 3 * AxisTickOffset}\n                  style={{ textAnchor: \"middle\" }}\n                >\n                  {formatTime(tickValue)}\n                </text>\n              </g>\n            ))}\n\n            {yScale.ticks().map((tickValue) => (\n              <g transform={`translate(0, ${yScale(tickValue)})`}>\n                <line x2={innerWidth} stroke=\"black\" />\n                <text\n                  x={-AxisTickOffset}\n                  dy=\"0.32em\"\n                  style={{ textAnchor: \"end\" }}\n                >\n                  {tickValue / 1000}\n                </text>\n              </g>\n            ))}\n            <text\n              x={innerWidth / 2}\n              y={innerHeight + xAxisLabelOffset}\n              style={{ textAnchor: \"middle\" }}\n            >\n              Month\n            </text>\n            <text\n              style={{ textAnchor: \"middle\" }}\n              transform={`translate(${-yAxisLabelOffset}, ${\n                innerHeight / 2\n              }) rotate(-90)`}\n            >\n              Networth (£ 1000 )\n            </text>\n            {data.map(({ networth, date }) => (\n              <Mark\n              fill={\"seagreen\"}\n                x={xScale(date)}\n                y={yScale(networth)}\n                width={4}\n                height={innerHeight - yScale(networth)}\n              />\n            ))}\n          </g>\n        </Svg>\n        <Frame small={\"true\"}>\n          <DescriptionContainer>\n            <Description>\n              Number of lessons done per month on Italki\n            </Description>\n            <Description>Cumulative Bar Chart on SVG With D3</Description>\n            <Signature>09/10/21 - L Ward</Signature>\n          </DescriptionContainer>\n        </Frame>\n      </ChartContainer>\n    </Frame>\n  );\n};\n\nconst Mark = ({ x, y, width, height, fill }) => {\n  const [tooltipVisible, setToolTipVisible] = useState(false);\n\n  return (\n    <>\n      <rect\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        fill={fill}\n        \n      />\n      {tooltipVisible && (\n        <rect x={x + 10} y={y - 25} height={50} width={50} rx={5} />\n      )}\n    </>\n  );\n};\n","import {useState, useEffect} from \"react\"\nimport {csv} from \"d3\"\n\n\nconst url = \"https://gist.githubusercontent.com/Lewisjohnward/8192f90bcb3d1298a9b1723d5d5471be/raw/6fa24f5a3db45f6b6d68d3846ca17b4d0435f60c/worth.csv\"\nexport const useGetData = () => {\n    const [data, setData] = useState(null)\n\n    useEffect(() => {\n        const row = d => {\n            const splitArray = d.date.split(\"-\")\n            const year = splitArray[1]\n            const month = splitArray[0]\n            d.date = new Date(`20${year}`, month, 1)\n            d.basicexp = +d[\"basic expenditure\"]\n            d.extraexp = +d[\"extra expenditure\"]\n            d.totalexp = +d[\"total expenditure\"]\n            d.networth = +d[\"nw\"]\n            d[\"4\"] = +d[\"4\"]\n            d[\"5\"]= +d[\"5\"]\n\n            return d\n        }\n        \n        csv(url, row).then(setData)\n    }, [])\n\n\n    return data\n}\n","import styled from \"styled-components\";\n\nexport const Frame = styled.div`\n  height: ${({ small }) => (small ? \"50px\" : \"350px\")};\n  width: ${({ small }) => (small ? \"250px\" : \"350px\")};\n  background-color: #ddc;\n  border: solid 1vmin #eee;\n  border-bottom-color: #fff;\n  border-left-color: #eee;\n  border-radius: 2px;\n  border-right-color: #eee;\n  border-top-color: #ddd;\n  box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.25) inset,\n    0 5px 10px 5px rgba(0, 0, 0, 0.25);\n\n  position: relative;\n  text-align: center;\n  &:before {\n    border-radius: 2px;\n    bottom: -0.4vmin;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.25) inset;\n    content: \"\";\n    left: -0.4vmin;\n    position: absolute;\n    right: -0.4vmin;\n    top: -0.4vmin;\n  }\n  &:after {\n    border-radius: 2px;\n    bottom: -0.5vmin;\n    box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.25);\n    content: \"\";\n    left: -0.5vmin;\n    position: absolute;\n    right: -0.5vmin;\n    top: -0.5vmin;\n  }\n`;\n\nexport const ChartContainer = styled.div`\nposition: relative;\nz-index: 999;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  height: 100%;\n  width: 100%;\n  padding: 5% 1%;\n  box-sizing: border-box;\n`;\n\nexport const Svg = styled.svg`\n  height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n  background: white;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\n  border: solid 2px;\n  border-bottom-color: #ffe;\n  border-left-color: #eed;\n  border-right-color: #eed;\n  border-top-color: #ccb;\n  font-size: 0.7em;\n\n  line {\n    stroke: gray;\n    opacity: 0.6;\n    shape-rendering: crispEdges;\n  }\n\n  text {\n    font-style: italic;\n    fill: gray;\n  }\n\n  .rect {\n    fill: seagreen;\n\n    .five{\n    fill : crimson;\n  }\n  }\n\n  \n`;\n\nexport const DescriptionContainer = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n  box-shadow: 0px 0px 10px 0px rgba(0, 0, 0, 0.2);\n  background: white;\n`;\n\nexport const Description = styled.p`\n  text-align: left;\n  font-size: 0.7em;\n`;\n\nexport const Signature = styled.p`\n  text-align: left;\n  font-style: italic;\n  font-size: 0.6em;\n`;\n","import { useState } from \"react\";\nimport { useGetData } from \"./useGetData\";\nimport {\n  randomInt,\n  range,\n  scaleLinear,\n  scaleTime,\n  max,\n  bin,\n  extent,\n  timeMonths,\n  sum,\n  scaleBand,\n  timeFormat,\n} from \"d3\";\nimport {\n  Frame,\n  Svg,\n  ChartContainer,\n  Description,\n  DescriptionContainer,\n  Signature,\n} from \"./styles\";\n\nconst margin = {\n  top: 30,\n  right: 30,\n  bottom: 30,\n  left: 40,\n};\n\nconst height = 200;\nconst width = 300;\n\nconst AxisTickOffset = 5;\nconst xAxisLabelOffset = 25;\nconst yAxisLabelOffset = 25;\n\nconst innerHeight = height - margin.top - margin.bottom;\nconst innerWidth = width - margin.left - margin.right;\n\nconst formatTime = timeFormat(\"%Y\");\n\nexport const Chart = () => {\n  const data = useGetData();\n\n  if (!data) {\n    return null;\n  }\n\n\n  const xValue = (d) => d.date;\n  const yValue = (d) => d.networth;\n\n  const xScale = scaleTime()\n    .domain(extent(data, xValue))\n    .range([0, innerWidth])\n    .nice();\n\n  const yScale = scaleLinear()\n    .domain([0, max(data, yValue)])\n    .range([innerHeight, 0])\n    .nice();\n\n  const fourPercentScale = scaleLinear()\n  .domain([0, max(data, d => d.nw * 0.10)])\n  .range([innerHeight, 0])\n  .nice();\n\n  const fourPercentData = data.map(({date, networth, basicexp, totalexp}) => {\n    return ({\n      date, \n      networth: networth * 0.04,\n      networth5: networth * 0.05,\n      networth6: networth * 0.06,\n      basicexp: basicexp * 12,\n      totalexp: totalexp * 12\n    })\n  })\n  return (\n    <Frame>\n      <ChartContainer>\n        <Svg height={height} width={width}>\n          <g transform={`translate(${margin.left}, ${margin.top})`}>\n            {xScale.ticks(4).map((tickValue) => (\n              <g transform={`translate(${xScale(tickValue)}, 0)`}>\n                <text\n                  dx=\"0.32em\"\n                  y={innerHeight + 3 * AxisTickOffset}\n                  style={{ textAnchor: \"middle\" }}\n                >\n                  {formatTime(tickValue)}\n                </text>\n              </g>\n            ))}\n\n            {fourPercentScale.ticks().map((tickValue) => (\n              <g transform={`translate(0, ${fourPercentScale(tickValue)})`}>\n                <line x2={innerWidth} stroke=\"black\" />\n                <text\n                  x={-AxisTickOffset}\n                  dy=\"0.32em\"\n                  style={{ textAnchor: \"end\" }}\n                >\n                  {tickValue / 1000}\n                </text>\n              </g>\n            ))}\n            <text\n              x={innerWidth / 2}\n              y={innerHeight + xAxisLabelOffset}\n              style={{ textAnchor: \"middle\" }}\n            >\n              Month\n            </text>\n            <text\n              style={{ textAnchor: \"middle\" }}\n              transform={`translate(${-yAxisLabelOffset}, ${\n                innerHeight / 2\n              }) rotate(-90)`}\n            >\n              Money (£ 1000 )\n            </text>\n            {fourPercentData.map(({ networth6, date }) => (\n              <Mark\n              fill={\"red\"}\n                x={xScale(date)}\n                y={fourPercentScale(networth6)}\n                width={3}\n                height={innerHeight - fourPercentScale(networth6)}\n              />\n            ))}\n            {fourPercentData.map(({ networth5, date }) => (\n              <Mark\n                fill={\"tomato\"}\n                x={xScale(date)}\n                y={fourPercentScale(networth5)}\n                width={3}\n                height={innerHeight - fourPercentScale(networth5)}\n              />\n            ))}\n            {fourPercentData.map(({ networth, date }) => (\n              <Mark\n              fill={\"seagreen\"}\n                x={xScale(date)}\n                y={fourPercentScale(networth)}\n                width={3}\n                height={innerHeight - fourPercentScale(networth)}\n              />\n            ))}\n            {fourPercentData.map(({ totalexp, date }) => (\n              <circle\n                fill={\"red\"}\n                cx={xScale(date)}\n                cy={fourPercentScale(totalexp)}\n                r={2}\n              />\n            ))}\n            {fourPercentData.map(({ basicexp, date }) => (\n              <circle\n                fill={\"seagreen\"}\n                cx={xScale(date)}\n                cy={fourPercentScale(basicexp)}\n                r={2}\n              />\n            ))}\n            \n            \n          </g>\n        </Svg>\n\n        <Frame small={\"true\"}>\n          <DescriptionContainer>\n            <Description>\n              Number of lessons done per month on Italki\n            </Description>\n            <Description>Cumulative Bar Chart on SVG With D3</Description>\n            <Signature>09/10/21 - L Ward</Signature>\n          </DescriptionContainer>\n        </Frame>\n      </ChartContainer>\n    </Frame>\n  );\n};\n\nconst Mark = ({ x, y, width, height, fill }) => {\n  const [tooltipVisible, setToolTipVisible] = useState(false);\n\n  return (\n    <>\n      <rect\n        x={x}\n        y={y}\n        width={width}\n        height={height}\n        fill={fill}\n        \n      />\n      {tooltipVisible && (\n        <rect x={x + 10} y={y - 25} height={50} width={50} rx={5} />\n      )}\n    </>\n  );\n};\n","import {useState, useEffect} from \"react\"\nimport {csv} from \"d3\"\n\n\nconst url = \"https://gist.githubusercontent.com/Lewisjohnward/8192f90bcb3d1298a9b1723d5d5471be/raw/6fa24f5a3db45f6b6d68d3846ca17b4d0435f60c/worth.csv\"\nexport const useGetData = () => {\n    const [data, setData] = useState(null)\n\n    useEffect(() => {\n        const row = d => {\n            const splitArray = d.date.split(\"-\")\n            const year = splitArray[1]\n            const month = splitArray[0]\n            d.date = new Date(`20${year}`, month, 1)\n            d.basicexp = +d[\"basic expenditure\"]\n            d.extraexp = +d[\"extra expenditure\"]\n            d.totalexp = +d[\"total expenditure\"]\n            d.networth = +d[\"nw\"]\n            d[\"4\"] = +d[\"4\"]\n            d[\"5\"]= +d[\"5\"]\n\n            return d\n        }\n        \n        csv(url, row).then(setData)\n    }, [])\n\n\n    return data\n}\n","import styled from \"styled-components\";\n\nexport const Frame = styled.div`\n  \n`;\n\nexport const ChartContainer = styled.div`\n  position: relative;\n`;\n\nexport const Svg = styled.svg`\n  height: ${({ height }) => height}px;\n  width: ${({ width }) => width}px;\n  background: white;\n  margin-left: 10px;\n  margin-top: 10px;\n  font-size: 0.7em;\n  line {\n    stroke: gray;\n    opacity: 0.6;\n    shape-rendering: crispEdges;\n  }\n\n  text {\n    font-style: italic;\n    fill: gray;\n  }\n\n  .rect {\n    fill: seagreen;\n\n    .five {\n      fill: crimson;\n    }\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { useGetData } from \"./useGetData\";\nimport {\n  randomInt,\n  range,\n  scaleLinear,\n  scaleTime,\n  max,\n  bin,\n  extent,\n  timeMonths,\n  sum,\n  scaleBand,\n  timeFormat,\n} from \"d3\";\nimport {\n  Frame,\n  Svg,\n  ChartContainer,\n  Description,\n  DescriptionContainer,\n  Signature,\n} from \"./styles\";\n\nconst margin = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n};\n\nconst height = 900;\nconst width = 900;\n\nconst innerHeight = height - margin.top - margin.bottom;\nconst innerWidth = width - margin.left - margin.right;\n\nexport const Chart = () => {\n  const countData = useGetData();\n\n  if (!countData) {\n    return null;\n  }\n\n  const array = range(Math.floor(Math.sqrt(countData.length)));\n  const data = [];\n  var num = 0;\n  array.forEach((d, i) => {\n    array.forEach((e, j) => {\n      data.push({\n        a: d,\n        b: j,\n        word: Object.getOwnPropertyNames(countData[num])[0],\n        count: countData[num][Object.getOwnPropertyNames(countData[num])[0]],\n      });\n      num++;\n    });\n  });\n\n  console.log(data);\n  const xValue = (d) => d.a;\n  const yValue = (d) => d.b;\n  const countValue = (d) => d.count;\n  const wordValue = (d) => d.word;\n\n  const xScale = scaleBand()\n    .domain(data.map(xValue))\n    .range([0, innerWidth])\n    .paddingInner(0.2);\n\n  console.log(xScale(5));\n\n  const yScale = scaleBand()\n    .domain(data.map(yValue))\n    .range([innerHeight, 0])\n    .paddingInner(0.2);\n\n  const colorScale = scaleLinear()\n    .domain([0, max(data, countValue)])\n    .range([\"#3FBF3F\", \"#BF3F3F\"]);\n\n  return (\n    <Frame>\n      <ChartContainer>\n        <Svg height={height} width={width}>\n          <g transform={`translate(${margin.left}, ${margin.top})`}>\n            <Mark\n              data={data}\n              xScale={xScale}\n              yScale={yScale}\n              xValue={xValue}\n              yValue={yValue}\n              countValue={countValue}\n              wordValue={wordValue}\n              width={xScale.bandwidth()}\n              height={yScale.bandwidth()}\n              colorScale={colorScale}\n            />\n          </g>\n        </Svg>\n      </ChartContainer>\n    </Frame>\n  );\n};\n\nconst Mark = ({\n  data,\n  xScale,\n  yScale,\n  xValue,\n  yValue,\n  countValue,\n  width,\n  height,\n  colorScale,\n  wordValue,\n}) => {\n  const [tooltipVisible, setToolTipVisible] = useState(false);\n  const [toolTipXLocation, setToolTipXLocation] = useState(0);\n  const [toolTipYLocation, setToolTipYLocation] = useState(0);\n  const [word, setWord] = useState(\"\");\n  const [count, setCount] = useState(\"\");\n  return (\n    <>\n      <g>\n        {data.map((d) => (\n          <g\n            transform={`translate(${xScale(xValue(d))}, ${yScale(yValue(d))})`}\n          >\n            <rect\n              height={height}\n              width={width}\n              fill={colorScale(countValue(d))}\n              onMouseEnter={() => {\n                setToolTipVisible(true);\n                setToolTipXLocation(xScale(xValue(d)));\n                setToolTipYLocation(yScale(yValue(d)));\n                setWord(wordValue(d));\n                setCount(countValue(d));\n              }}\n              onMouseLeave={() => {\n                setToolTipVisible(false);\n              }}\n            />\n          </g>\n        ))}\n        {tooltipVisible && (\n          <ToolTip\n            x={toolTipXLocation + 20}\n            y={toolTipYLocation + 20}\n            word={word}\n            count={count}\n          />\n        )}\n      </g>\n    </>\n  );\n};\n\n// const Rect = () => {\n//   const [highlight, setHighlight] = useState(false);\n//   return (\n//     <g transform={`translate(${xScale(xValue(d))}, ${yScale(yValue(d))})`}>\n//       <rect\n//         height={height}\n//         width={width}\n//         fill={colorScale(countValue(d))}\n//         stroke={hightlight && \"black\"}\n//         onMouseEnter={() => setHighlight(true)}\n//         onMouseLeave={() => setHighlight(false)}\n//       />\n//     </g>\n//   );\n// };\n\nconst ToolTip = ({ x, y, word, count }) => {\n  return (\n    <g transform={`translate(${x}, ${y})`}>\n      <rect height={100} width={100} fill={\"white\"} stroke=\"black\" />\n      <text x={35} y={30} fill=\"black\" stroke=\"black\">\n        {word}\n      </text>\n      <text x={35} y={70} fill=\"black\" stroke=\"black\">\n        {count}\n      </text>\n    </g>\n  );\n};\n\n//\n","import {useState, useEffect} from \"react\"\nimport {json} from \"d3\"\n\n\nconst url = \"https://gist.githubusercontent.com/Lewisjohnward/d40f11d1c3489407be05af653a7391e4/raw/0030623ef6b96674f40a2d056c95af37f2af67e3/scheletri-word-list-count.json\"\nexport const useGetData = () => {\n    const [data, setData] = useState(null)\n\n    useEffect(() => {        \n        json(url).then(setData)\n    }, [])\n\n    \n\n\n    return data\n}\n","import { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst letterAnimation = keyframes`\n    0% {transform: rotate(0deg);}\n    20% {transform: rotate(-45deg);}\n    100% {transform: rotate(-45deg);}\n`;\n\nconst TextContainer = styled.div`\n  position: absolute;\n  top: 25%;\n  display: flex;\n  font-size: 10em;\n  \n`;\n\nconst LetterContainer = styled.div`\n  &.fallanimation {\n    transition: transform 1s;\n    transform: translateY(942px);\n  }\n  \n  p {\n    font-weight: ${({bold}) => bold ? 600: 300};\n    &.fallanimation {\n      animation: ${letterAnimation} ease-out 1s forwards;\n    }\n  }\n`;\n\nconst word = \"Hello\";\nconst d3 = \"D3\"\nconst d3Array = d3.split(\"\");\nconst wordArray = word.split(\"\");\nconst height = window.innerHeight;\n\nexport const Hello = () => {\n  return (\n    <TextContainer>\n      {wordArray.map((d) => (\n        <Letter letter={d} />\n      ))}\n      {d3Array.map((d) => (\n        <Letter letter={d} bold={true}/>\n      ))}\n    </TextContainer>\n  );\n};\n\nconst Letter = ({ letter, bold}) => {\n  const [visible, setVisible] = useState(true);\n\n  const handleMouseEnter = () => {\n    setVisible((prev) => !prev);\n  };\n\n  return (\n    <LetterContainer className={!visible && \"fallanimation\"} height={height} bold={bold}>\n      <p\n        className={!visible && \"fallanimation\"}\n        onMouseEnter={() => handleMouseEnter()}\n      >\n        {letter}\n      </p>\n    </LetterContainer>\n  );\n};\n","import { useState, useEffect } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst Icon = styled.div`\n  position: absolute;\n  z-index: 999;\n  bottom: 1%;\n  left: 1%;\n  height: 200px;\n  width: 200px;\n  padding: 0px;\n  margin-bottom: 100px;\n\n  color: black;\n  overflow: hidden;\n  background: rgb(229, 229, 229);\n  opacity: 1;\n  text-shadow: none;\n  font-weight: 300;\n  font-size: 0.9em;\n  box-shadow: 1px 1px 10px 1px rgba(0, 0, 0, 0.5);\n  border-radius: 5px;\n`;\n\nconst Container = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Timer = styled.div`\n  position: relative;\n  background: gray;\n  height: 65%;\n  width: 90%;\n  border-radius: 5px 5px 50px 5px;\n  box-shadow: 1px 1px 10px 1px rgba(0, 0, 0, 0.5);\n`;\n\nconst TimerContainer = styled.div`\n  position: absolute;\n  top: 10%;\n  left: 15%;\n  height: 80%;\n  width: 70%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background: palegreen;\n  border-radius: 5px;\n  border: 1px solid rgba(0, 0, 0, 0.2);\n  font-size: 1.8em;\n`;\n\nconst ButtonContainer = styled.div`\n  height: 25%;\n  width: 80%;\n  display: flex;\n\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nconst Start_StopContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: mediumvioletred;\n  width: 30px;\n  height: 30px;\n  border-radius: 100%;\n  box-shadow: 1px 1px 10px 1px rgba(0, 0, 0, 0.5);\n  font-size: 1.2em;\n  font-weight: 800;\n  cursor: pointer;\n\n  &:active {\n    transition: transform 0.1s box-shadow 0.1s;\n    transform: translateY(10%);\n  }\n`;\n\nconst ButtonDiv = styled.div`\n  font-weight: 600;\n\n  p {\n    transform: translate(50%, -30%) rotate(-20deg);\n  }\n`;\n\nconst DateContainer = styled.div`\n  position: absolute;\n  top: 58%;\n  left: 20%;\n  font-size: 0.7em;\n  text-decoration: italic;\n\n  .today {\n    right: 0%;\n  }\n`;\n\nexport const TimerComponent = ({ grid }) => {\n  const [seconds, setSeconds] = useState(0);\n  const [active, setActive] = useState(false);\n\n  useEffect(() => {\n    const seconds = parseInt(localStorage.getItem(\"seconds-d3\")) || 0;\n    const active = localStorage.getItem(\"state-d3\") || false;\n    setActive(active);\n    setSeconds(seconds);\n  }, []);\n\n  useEffect(() => {\n    if (active) {\n      setTimeout(() => {\n        setSeconds((prev) => prev + 1);\n      }, 1000);\n    }\n    localStorage.setItem(\"seconds-d3\", seconds);\n    localStorage.setItem(\"state-d3\", active);\n  }, [active, seconds]);\n\n  function secondsToTime(e) {\n    var h = Math.floor(e / 3600)\n        .toString()\n        .padStart(2, \"0\"),\n      m = Math.floor((e % 3600) / 60)\n        .toString()\n        .padStart(2, \"0\"),\n      s = Math.floor(e % 60)\n        .toString()\n        .padStart(2, \"0\");\n\n    return h + \":\" + m + \":\" + s;\n    //return `${h}:${m}:${s}`;\n  }\n\n  return (\n    <Icon className={`icon`}>\n      <Container>\n        <Timer>\n          <TimerContainer>{secondsToTime(seconds)}</TimerContainer>\n        </Timer>\n        <DateContainer>20/10/2021</DateContainer>\n\n        <ButtonContainer>\n          <ButtonDiv>\n            <Start_StopContainer\n              onClick={() => {\n                if (!active) {\n                  setActive(true);\n                }\n              }}\n            />\n            <p>Go</p>\n          </ButtonDiv>\n          {active ? (\n            <ButtonDiv>\n              <Start_StopContainer onClick={() => setActive(false)} />\n              <p>Stop</p>\n            </ButtonDiv>\n          ) : (\n            <ButtonDiv>\n              <Start_StopContainer onClick={() => setSeconds(0)} />\n              <p>Reset</p>\n            </ButtonDiv>\n          )}\n        </ButtonContainer>\n      </Container>\n    </Icon>\n  );\n};\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { TimerComponent as Timer } from \"./Timer\";\nimport { IoIosArrowBack, IoMdHelp } from \"react-icons/io\";\n\nconst NavContainer = styled.div`\n  position: absolute;\n  z-index: 998;\n  height: 100%;\n  width: 400px;\n  overflow: hidden;\n  background: white;\n  padding: 25px 10px 25px 25px;\n  border-right: 1px solid black;\n  > p {\n    font-size: 0.9em;\n  }\n\n  &.open {\n    transition: all 1s ease-in;\n    transform: translateX(0px);\n    position: absolute;\n    z-index: 998;\n  }\n  &.close {\n    transition: all 1s ease-in;\n    transform: translateX(-100%);\n    position: absolute;\n    z-index: 998;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 2em;\n  font-weight: 700;\n  text-align: center;\n`;\n\nconst Icon = styled(IoMdHelp)`\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  z-index: 999;\n  font-size: 1em;\n  color: cornflowerblue;\n  cursor: pointer;\n  border: 1px solid rgba(0, 0, 0, 0.6);\n`;\nconst CloseIcon = styled(IoIosArrowBack)`\n  position: absolute;\n  right: 5px;\n  top: 5px;\n  z-index: 999;\n  font-size: 1em;\n  color: cornflowerblue;\n  cursor: pointer;\n  border: 1px solid rgba(0, 0, 0, 0.6);\n`;\n\nconst code = `const binnedData = bin()\n.value(xValue)\n.domain(xScale.domain())\n.thresholds(timeMonths(start, stop))(data)\n.map(array => {\n  console.log(array)\n  return (\n    { \n    y: array.length, \n    x0: array.x0, \n    x1: array.x1\n  }\n  )})`;\n\nconst scaleBandCode = `\n  d3.scaleBand()\n  .domain(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\".split(\"\").slice(0, domainCardinality))\n  .range([40, 40 + rangeLength])\n  .paddingInner(paddingInner)\n  .paddingOuter(paddingOuter)\n  .align(align)\n  .round(enableRounding)\n  `;\n\nexport const Navbar = () => {\n  const [visible, setVisible] = useState(false);\n  return (\n    <>\n      {visible ? (\n        <CloseIcon onClick={() => setVisible((prev) => !prev)} />\n      ) : (\n        <Icon onClick={() => setVisible((prev) => !prev)} />\n      )}\n      <NavContainer className={visible ? \"open\" : \"close\"}>\n        <Title>Cheatsheet</Title>\n        <p>d3.randomInt(1, 5)()-Produces random int from 1 to 5</p>\n        <p>d3.randomInt(6)() - Produces random into from 0 to 6</p>\n        <p>d3.range(5) - produces an array from 0 to value</p>\n        <p>domain - takes the data range</p>\n        <p>range - takes the graph dimension and returns array</p>\n        <pre>\n          <code>{code}</code>\n        </pre>\n        <pre>\n          <code>xScale.ticks(4).map</code>\n        </pre>\n        <pre>\n          <code>const parseTime = d3.timeParse('%Y-%m-%d');</code>\n        </pre>\n        <Timer />\n      </NavContainer>\n      \n    </>\n  );\n};\n","import { useState } from \"react\";\nimport { IoIosArrowForward } from \"react-icons/io\";\nimport styled from \"styled-components\";\nimport { Chart1, Chart2, Chart3, Chart4, Chart5 } from \"./charts/index.js\";\nimport { Hello } from \"./components/HelloD3\";\nimport { Navbar } from \"./components/Navbar.js\";\n\nconst BodyContainer = styled.div`\n  position: relative;\n  z-index: 99;\n  height: ${({ height }) => height}px;\n  overflow: hidden;\n`;\n\nconst ChartGrid = styled.div`\n  display: grid;\n  overflow: scroll;\n  grid-template-columns: repeat(3, 400px);\n  grid-template-rows: repeat(2, 400px);\n  justify-content: center;\n  align-items: start;\n  align-content: start;\n  grid-gap: 0px;\n  padding: 1%;\n`;\n\nconst View = styled.div`\n  width: 100%;\n`;\n\nconst Icon = styled(IoIosArrowForward)`\n  position: absolute;\n  bottom: 5%;\n  right: 40%;\n  font-size: 2em;\n  transform: rotate(90deg);\n  cursor: pointer;\n  border: 1px solid black;\n`;\n\nconst SingleView = styled.div``;\n\nconst height = window.innerHeight;\n\nfunction App() {\n  const [gridView, setGridView] = useState(false);\n  return (\n    <BodyContainer height={height}>\n      <Hello />\n      <Navbar />\n      <View>\n        {gridView ? (\n          <ChartGrid>\n            <Chart1 />\n            <Chart2 />\n            <Chart3 />\n            <Chart4 />\n            \n          </ChartGrid>\n        ) : (\n          <SingleView>\n            <Chart5 />\n          </SingleView>\n        )}\n      </View>\n      <Icon onClick={() => setGridView((prev) => !prev)} />\n    </BodyContainer>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}